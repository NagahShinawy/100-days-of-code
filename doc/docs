1- local scope is withing functions
2- there is no block scope

# ###########################

There are 2 of SCOPES
    1- block scope: you can access variables within (if, while, for)
    2- function scope: variable within function (you can use LOCAL, GLOBAL variable like we used in "scope.py"



##############################

SyntaxError: name 'bonus' is assigned to before global declaration

def update_salary_global_scope():
    global salary
    bonus = 0
    global bonus
    bonus += 5
    salary = 8000
    print("Salary Within Function", salary)
    print("inside", bonus)


# error: because now confused between local var, global var,!! . you tell python to take care about var that is local
and global in the same time.

# Type error: You trying do something with wrong data type


##############################################################

hold alt + shift then drag mouse to update all in once

x
y
z

then hold alt + shift and put the pointer at the beginning
then you should able to update all 3 line at the same time.


===============================================================
Procedural Programming: Just like coffee machine day 15 (using functions)

OOP: try to model real world obj (what obj has" attr", what obj does" methods")
- method: is not floating function, it is attached to a model (obj).

=====================

PascalCase, camelCase, snake_case,  capap-case

=======================
IMPORTING

- import turtle
- from turtle import Turtle
- from turtle import *

- import turtle as tut
- from turtle import Turtle as tim


===============================
higher order function: is function can work with another function

A function is called Higher Order Function if it contains other functions as a parameter or returns a function as an output
i.e, the functions that operate with another function are known as Higher order Functions

def create_adder(x):
    def adder(y):
        return x + y

    return adder


add_15 = create_adder(15)

print(add_15(10))


=========================

timmy = Turtle()
timmy.color = green  ==> state  (attributes)
timmy.move() ==> action (method)

==========================
database
https://opentdb.com/api_config.php

============================

TypeError: range() does not take keyword arguments


range() takes 1 positional argument and two optional arguments,
and interprets these arguments differently depending on how many arguments you passed in.

############################################

with open("scores.txt", "r") as f:
    content = f.read()

print(content, type(content))  # content is str type


# write(w) mode ==> override content
# if file does not exist , it will be created
with open("scores.txt", "w") as f:
    f.write("PHP for web development")


# append(a) mode ==> append content
# if file does not exist , it will be created
with open("scores.txt", "w") as f:
    f.write("PHP for web development")


###################################################
- ABSOLUTE PATH: path always relative to root

- /root/work/project/talk.ppt   ===> ABSOLUTE PATH

- we are in dir project so, RELATIVE PATH for ppt is : ./talk.ptt

- ./ : means look in the current folder

- if we are in the work dir so ppt RELATIVE PATH ./project/talk.ppt

- ./ : means replace '.' with current working dir

- if we are in project dir and we need to go to file in the work dir, so ===> ../project/FILE_IN_WORK_DIR

-  []./ ====> means current, 0 step up
-  [.]./ means one step up

-  [..]./ means 2 steps up  ====> ../../ means 2 steps up